[{"D:\\DevConnect_MERN\\DevConnect\\client\\src\\index.js":"1","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reportWebVitals.js":"2","D:\\DevConnect_MERN\\DevConnect\\client\\src\\App.js":"3","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Navbar.js":"4","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Landing.js":"5","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Login.js":"6","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Register.js":"7","D:\\DevConnect_MERN\\DevConnect\\client\\src\\store.js":"8","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\index.js":"9","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\alert.js":"10","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\types.js":"11","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\alert.js":"12","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Alert.js":"13","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\auth.js":"14","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\auth.js":"15","D:\\DevConnect_MERN\\DevConnect\\client\\src\\utils\\setAuthToken.js":"16","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Dashboard.js":"17","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\routing\\PrivateRoute.js":"18","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\profile.js":"19","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\profile.js":"20","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Spinner.js":"21","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\DashboardActions.js":"23","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\EditProfile.js":"24","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\AddExperience.js":"25","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\AddEducation.js":"26","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Experience.js":"27","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Education.js":"28","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profiles\\Profiles.js":"29","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profiles\\ProfileItem.js":"30","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\Profile.js":"31","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileTop.js":"32","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileAbout.js":"33","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileExperience.js":"34","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileEducation.js":"35","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileGithub.js":"36"},{"size":478,"mtime":1607959927711,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":2827,"mtime":1609256310318,"results":"40","hashOfConfig":"38"},{"size":1617,"mtime":1609170119856,"results":"41","hashOfConfig":"38"},{"size":1228,"mtime":1609264822780,"results":"42","hashOfConfig":"38"},{"size":2109,"mtime":1609092930009,"results":"43","hashOfConfig":"38"},{"size":2777,"mtime":1608658724649,"results":"44","hashOfConfig":"38"},{"size":443,"mtime":1608359552838,"results":"45","hashOfConfig":"38"},{"size":237,"mtime":1608747146708,"results":"46","hashOfConfig":"38"},{"size":389,"mtime":1608134777799,"results":"47","hashOfConfig":"38"},{"size":723,"mtime":1609169263510,"results":"48","hashOfConfig":"38"},{"size":606,"mtime":1608570589054,"results":"49","hashOfConfig":"38"},{"size":628,"mtime":1608658742073,"results":"50","hashOfConfig":"38"},{"size":2187,"mtime":1608828648298,"results":"51","hashOfConfig":"38"},{"size":985,"mtime":1609103651809,"results":"52","hashOfConfig":"38"},{"size":429,"mtime":1608570581357,"results":"53","hashOfConfig":"38"},{"size":2129,"mtime":1609175990045,"results":"54","hashOfConfig":"38"},{"size":770,"mtime":1609265054438,"results":"55","hashOfConfig":"38"},{"size":855,"mtime":1609169263510,"results":"56","hashOfConfig":"38"},{"size":5609,"mtime":1609176406892,"results":"57","hashOfConfig":"38"},{"size":311,"mtime":1608823702704,"results":"58","hashOfConfig":"38"},{"size":7057,"mtime":1609176170939,"results":"59","hashOfConfig":"38"},{"size":663,"mtime":1608974584478,"results":"60","hashOfConfig":"38"},{"size":8298,"mtime":1609177985469,"results":"61","hashOfConfig":"38"},{"size":3586,"mtime":1609176170939,"results":"62","hashOfConfig":"38"},{"size":3652,"mtime":1609176170945,"results":"63","hashOfConfig":"38"},{"size":1565,"mtime":1609262525187,"results":"64","hashOfConfig":"38"},{"size":1409,"mtime":1609103804457,"results":"65","hashOfConfig":"38"},{"size":1387,"mtime":1609175990196,"results":"66","hashOfConfig":"38"},{"size":1126,"mtime":1609176258524,"results":"67","hashOfConfig":"38"},{"size":2707,"mtime":1609265580497,"results":"68","hashOfConfig":"38"},{"size":1937,"mtime":1609260057829,"results":"69","hashOfConfig":"38"},{"size":888,"mtime":1609260944711,"results":"70","hashOfConfig":"38"},{"size":1045,"mtime":1609263244183,"results":"71","hashOfConfig":"38"},{"size":1040,"mtime":1609264157342,"results":"72","hashOfConfig":"38"},{"size":1818,"mtime":1609266204923,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"wv7crz",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"76"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\DevConnect_MERN\\DevConnect\\client\\src\\index.js",[],["156","157"],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reportWebVitals.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\App.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Navbar.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Landing.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Login.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Register.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\store.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\index.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\alert.js",["158"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\types.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\alert.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Alert.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\auth.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\auth.js",["159"],"import { REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem('token');\r\n      return { ...state, token: null, isAuthenticated: false, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\utils\\setAuthToken.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Dashboard.js",["160"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n  deleteAccount,\r\n}) => {\r\n  // console;\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, []);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i>Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience}></Experience>\r\n          <Education education={profile.education} />\r\n          <div className='my-2'>\r\n            <button\r\n              onClick={() => {\r\n                console.log('iN HERE');\r\n                deleteAccount();\r\n              }}\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-user-minus'></i>Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>Profile isn't setup, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\profile.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\profile.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Spinner.js",["161"],"import React, { Fragment } from 'react';\r\nimport spinner from '../../img/spinner.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        alt='Loading....'\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\CreateProfile.js",["162"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { createProfile } from '../../actions/profile';\r\n\r\nconst CreateProfile = ({ createProfile, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    bio: '',\r\n    status: '',\r\n    githubusername: '',\r\n    skills: '',\r\n    youtube: '',\r\n    facebook: '',\r\n    twitter: '',\r\n    instagram: '',\r\n    linkedlin: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInput] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    bio,\r\n    status,\r\n    githubusername,\r\n    skills,\r\n    youtube,\r\n    facebook,\r\n    twitter,\r\n    instagram,\r\n    linkedlin,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(history);\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form onSubmit={(e) => onSubmit(e)} className='form'>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => {\r\n              toggleSocialInput(!displaySocialInputs);\r\n            }}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaySocialInputs && (\r\n          <>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={linkedlin}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Linkedin URL'\r\n                name='linkedlin'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\EditProfile.js",["163"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  history,\r\n  getCurrentProfile,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    bio: '',\r\n    status: '',\r\n    githubusername: '',\r\n    skills: '',\r\n    youtube: '',\r\n    facebook: '',\r\n    twitter: '',\r\n    instagram: '',\r\n    linkedlin: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInput] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(),\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedlin: loading || !profile.social ? '' : profile.social.linkedlin,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    });\r\n  }, [loading]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    bio,\r\n    status,\r\n    githubusername,\r\n    skills,\r\n    youtube,\r\n    facebook,\r\n    twitter,\r\n    instagram,\r\n    linkedlin,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form onSubmit={(e) => onSubmit(e)} className='form'>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => {\r\n              toggleSocialInput(!displaySocialInputs);\r\n            }}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaySocialInputs && (\r\n          <>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={linkedlin}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Linkedin URL'\r\n                name='linkedlin'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\AddExperience.js",["164","165"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import e from 'express';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addExperience(formData, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 class='large text-primary'>Add An Experience</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form onSubmit={(e) => onSubmit(e)} class='form'>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n            name='location'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n            name='from'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              value={current}\r\n              checked={current}\r\n              value={title}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n              name='current'\r\n              value=''\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            name='to'\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />{' '}\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\AddEducation.js",["166","167"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import e from 'express';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addEducation(formData, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 class='large text-primary'>Add An Education</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any school or bootcamps that you\r\n        have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form onSubmit={(e) => onSubmit(e)} class='form'>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Your School'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Your Degree'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n            name='fieldofstudy'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n            name='from'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              value={current}\r\n              checked={current}\r\n              value={degree}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n              name='current'\r\n              value=''\r\n            />{' '}\r\n            Current Degree/Programme\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            name='to'\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />{' '}\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Programme Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Education.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profiles\\Profiles.js",["168"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfiles } from '../../actions/profile';\r\nimport ProfileItem from './ProfileItem';\r\n\r\nconst Profiles = ({ profile: { profiles, loading }, getProfiles }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner></Spinner>\r\n      ) : (\r\n        <>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'></i>\r\n            Browse and connect with developers\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              <>\r\n                {' '}\r\n                {profiles.map((profile) => {\r\n                  return <ProfileItem key={profile._id} profile={profile} />;\r\n                })}{' '}\r\n              </>\r\n            ) : (\r\n              <h4>No Profiles found</h4>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profiles\\ProfileItem.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\Profile.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileTop.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileAbout.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileExperience.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileEducation.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileGithub.js",["169"],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":5,"column":1,"nodeType":"176","endLine":15,"endColumn":2},{"ruleId":"174","severity":1,"message":"175","line":10,"column":1,"nodeType":"176","endLine":22,"endColumn":2},{"ruleId":"177","severity":1,"message":"178","line":21,"column":6,"nodeType":"179","endLine":21,"endColumn":8,"suggestions":"180"},{"ruleId":"174","severity":1,"message":"181","line":4,"column":1,"nodeType":"176","endLine":14,"endColumn":3},{"ruleId":"182","severity":1,"message":"183","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"186","line":48,"column":6,"nodeType":"179","endLine":48,"endColumn":15,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":84,"column":15,"nodeType":"190","endLine":84,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":90,"column":15,"nodeType":"190","endLine":90,"endColumn":23},{"ruleId":"188","severity":1,"message":"189","line":92,"column":15,"nodeType":"190","endLine":92,"endColumn":29},{"ruleId":"188","severity":1,"message":"189","line":98,"column":15,"nodeType":"190","endLine":98,"endColumn":23},{"ruleId":"177","severity":1,"message":"191","line":11,"column":6,"nodeType":"179","endLine":11,"endColumn":8,"suggestions":"192"},{"ruleId":"177","severity":1,"message":"193","line":10,"column":6,"nodeType":"179","endLine":10,"endColumn":22,"suggestions":"194"},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["197"],"Assign arrow function to a variable before exporting as module default","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["198"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["199"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["200"],"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"209","text":"210"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"211","text":"212"},"Update the dependencies array to be: [getProfiles]",{"range":"213","text":"214"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"215","text":"216"},[614,616],"[getCurrentProfile]",[1689,1698],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",[379,381],"[getProfiles]",[344,360],"[getGithubRepos, username]"]