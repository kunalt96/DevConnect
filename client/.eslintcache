[{"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\index.js":"1","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reportWebVitals.js":"2","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\App.js":"3","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\store.js":"4","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\auth.js":"5","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\utils\\setAuthToken.js":"6","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Landing.js":"7","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Navbar.js":"8","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\routing\\Routes.js":"9","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\types.js":"10","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\alert.js":"11","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\routing\\PrivateRoute.js":"12","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Alert.js":"13","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\NotFound.js":"14","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\Login.js":"15","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\ResetPassword.js":"16","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Dashboard.js":"17","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\Register.js":"18","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\CreateProfile.js":"19","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\EditProfile.js":"20","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\AddEducation.js":"21","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\Profile.js":"22","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\AddExperience.js":"23","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\Posts.js":"24","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profiles\\Profiles.js":"25","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\Post.js":"26","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\index.js":"27","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Education.js":"28","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\profile.js":"29","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\DashboardActions.js":"30","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Experience.js":"31","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Spinner.js":"32","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\CommentForm.js":"33","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\CommentItem.js":"34","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\post.js":"35","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\PostItem.js":"36","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profiles\\ProfileItem.js":"37","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\PostForm.js":"38","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileEducation.js":"39","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileExperience.js":"40","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\CreateResume.js":"41","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileGithub.js":"42","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileAbout.js":"43","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileTop.js":"44","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\profile.js":"45","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\alert.js":"46","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\auth.js":"47","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\post.js":"48"},{"size":494,"mtime":1612200957076,"results":"49","hashOfConfig":"50"},{"size":375,"mtime":1612200957079,"results":"51","hashOfConfig":"50"},{"size":1014,"mtime":1612200957037,"results":"52","hashOfConfig":"50"},{"size":443,"mtime":1612200957079,"results":"53","hashOfConfig":"50"},{"size":2972,"mtime":1612200957038,"results":"54","hashOfConfig":"50"},{"size":429,"mtime":1612200957079,"results":"55","hashOfConfig":"50"},{"size":1228,"mtime":1612200957042,"results":"56","hashOfConfig":"50"},{"size":1797,"mtime":1612200957042,"results":"57","hashOfConfig":"50"},{"size":2052,"mtime":1612200957071,"results":"58","hashOfConfig":"50"},{"size":1111,"mtime":1612200957039,"results":"59","hashOfConfig":"50"},{"size":371,"mtime":1612200957037,"results":"60","hashOfConfig":"50"},{"size":700,"mtime":1612200957071,"results":"61","hashOfConfig":"50"},{"size":628,"mtime":1612200957042,"results":"62","hashOfConfig":"50"},{"size":316,"mtime":1612200957043,"results":"63","hashOfConfig":"50"},{"size":2619,"mtime":1612601434795,"results":"64","hashOfConfig":"50"},{"size":2569,"mtime":1612200957040,"results":"65","hashOfConfig":"50"},{"size":2129,"mtime":1612200957041,"results":"66","hashOfConfig":"50"},{"size":2777,"mtime":1612200957040,"results":"67","hashOfConfig":"50"},{"size":8300,"mtime":1612200957065,"results":"68","hashOfConfig":"50"},{"size":11235,"mtime":1612200957065,"results":"69","hashOfConfig":"50"},{"size":3652,"mtime":1612200957064,"results":"70","hashOfConfig":"50"},{"size":3474,"mtime":1612200957067,"results":"71","hashOfConfig":"50"},{"size":3586,"mtime":1612200957065,"results":"72","hashOfConfig":"50"},{"size":1033,"mtime":1612200957045,"results":"73","hashOfConfig":"50"},{"size":1445,"mtime":1612200957070,"results":"74","hashOfConfig":"50"},{"size":1280,"mtime":1612200957044,"results":"75","hashOfConfig":"50"},{"size":243,"mtime":1612200957077,"results":"76","hashOfConfig":"50"},{"size":1409,"mtime":1612200957041,"results":"77","hashOfConfig":"50"},{"size":5683,"mtime":1612200957039,"results":"78","hashOfConfig":"50"},{"size":663,"mtime":1612200957041,"results":"79","hashOfConfig":"50"},{"size":1565,"mtime":1612200957042,"results":"80","hashOfConfig":"50"},{"size":311,"mtime":1612200957043,"results":"81","hashOfConfig":"50"},{"size":1076,"mtime":1612200957043,"results":"82","hashOfConfig":"50"},{"size":1462,"mtime":1612200957044,"results":"83","hashOfConfig":"50"},{"size":3706,"mtime":1612200957039,"results":"84","hashOfConfig":"50"},{"size":2501,"mtime":1612200957045,"results":"85","hashOfConfig":"50"},{"size":1217,"mtime":1612200957070,"results":"86","hashOfConfig":"50"},{"size":1037,"mtime":1612200957045,"results":"87","hashOfConfig":"50"},{"size":1040,"mtime":1612200957068,"results":"88","hashOfConfig":"50"},{"size":1045,"mtime":1612200957068,"results":"89","hashOfConfig":"50"},{"size":2408,"mtime":1612200957066,"results":"90","hashOfConfig":"50"},{"size":1829,"mtime":1612200957069,"results":"91","hashOfConfig":"50"},{"size":888,"mtime":1612200957067,"results":"92","hashOfConfig":"50"},{"size":2134,"mtime":1612200957070,"results":"93","hashOfConfig":"50"},{"size":870,"mtime":1612200957077,"results":"94","hashOfConfig":"50"},{"size":389,"mtime":1612200957076,"results":"95","hashOfConfig":"50"},{"size":1050,"mtime":1612200957077,"results":"96","hashOfConfig":"50"},{"size":1691,"mtime":1612200957077,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"vw23ms",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"100"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"100"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"100"},"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\index.js",[],["208","209"],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reportWebVitals.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\App.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\store.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\auth.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\utils\\setAuthToken.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Landing.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Navbar.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\routing\\Routes.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\types.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\alert.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Alert.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\NotFound.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\Login.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\ResetPassword.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Dashboard.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\Register.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\CreateProfile.js",["210"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { createProfile } from '../../actions/profile';\r\nimport { setAlert } from '../../actions/alert';\r\nimport axios from 'axios';\r\n\r\nconst CreateProfile = ({ createProfile, history, setAlert }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    bio: '',\r\n    status: '',\r\n    githubusername: '',\r\n    skills: '',\r\n    youtube: '',\r\n    facebook: '',\r\n    twitter: '',\r\n    instagram: '',\r\n    linkedlin: '',\r\n    profilePicUrl: '',\r\n    public_id: '',\r\n  });\r\n\r\n  const [imageData, setImage] = useState(null);\r\n  const [displaySocialInputs, toggleSocialInput] = useState(false);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    bio,\r\n    status,\r\n    githubusername,\r\n    skills,\r\n    youtube,\r\n    facebook,\r\n    twitter,\r\n    instagram,\r\n    linkedlin,\r\n    profilePicUrl,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    createProfile(formData, history);\r\n  };\r\n\r\n  const fileUpload = async () => {\r\n    const imageDataForm = new FormData();\r\n    imageDataForm.append('profilePic', imageData);\r\n    try {\r\n      const res = await axios.post('/api/profile/upload', imageDataForm);\r\n      setFormData({\r\n        ...formData,\r\n        profilePicUrl: res.data.secure_url,\r\n        public_id: res.data.public_id,\r\n      });\r\n      setAlert('Yo! You got a profile pic', 'success');\r\n    } catch (err) {\r\n      console.log(err);\r\n      setAlert('Image not uploaded', 'danger');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form onSubmit={(e) => onSubmit(e)} className='form'>\r\n        <div className='form-group'>\r\n          <input\r\n            name='profilePic'\r\n            type='file'\r\n            onChange={(e) => {\r\n              setImage(e.target.files[0]);\r\n              console.log(e.target.files[0]);\r\n            }}\r\n          />\r\n          <button\r\n            onClick={() => {\r\n              fileUpload();\r\n            }}\r\n            type='button'\r\n            className='btn btn-primary'\r\n          >\r\n            Upload Image\r\n          </button>\r\n        </div>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => {\r\n              toggleSocialInput(!displaySocialInputs);\r\n            }}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaySocialInputs && (\r\n          <>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={linkedlin}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Linkedin URL'\r\n                name='linkedlin'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createProfile, setAlert })(\r\n  withRouter(CreateProfile)\r\n);\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\EditProfile.js",["211"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\nimport { setAlert } from '../../actions/alert';\r\nimport axios from 'axios';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  history,\r\n  setAlert,\r\n  getCurrentProfile,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    bio: '',\r\n    status: '',\r\n    githubusername: '',\r\n    skills: '',\r\n    youtube: '',\r\n    facebook: '',\r\n    twitter: '',\r\n    instagram: '',\r\n    linkedlin: '',\r\n    profilePicUrl: '',\r\n    public_id: '',\r\n  });\r\n\r\n  const [imageData, setImage] = useState(null);\r\n  const [loadSpinner, setSpinner] = useState(false);\r\n\r\n  const [displaySocialInputs, toggleSocialInput] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(),\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedlin: loading || !profile.social ? '' : profile.social.linkedlin,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n      profilePicUrl:\r\n        loading || !profile.profilePic ? '' : profile.profilePic.profilePicUrl,\r\n      public_id:\r\n        loading || !profile.profilePic ? '' : profile.profilePic.public_id,\r\n    });\r\n  }, [getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    bio,\r\n    status,\r\n    githubusername,\r\n    skills,\r\n    youtube,\r\n    facebook,\r\n    twitter,\r\n    instagram,\r\n    linkedlin,\r\n    profilePicUrl,\r\n    public_id,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData, 2);\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  const fileUpload = async () => {\r\n    const imageDataForm = new FormData();\r\n    imageDataForm.append('profilePic', imageData);\r\n    try {\r\n      const res = await axios.post('/api/profile/upload', imageDataForm);\r\n      console.log(res.data);\r\n      setFormData({\r\n        ...formData,\r\n        profilePicUrl: res.data.secure_url,\r\n        public_id: res.data.public_id,\r\n      });\r\n      setAlert('Yo! You got a profile pic', 'success');\r\n      setSpinner(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setAlert('Image not uploaded', 'danger');\r\n      setSpinner(false);\r\n    }\r\n  };\r\n\r\n  const removeProfilePic = async () => {\r\n    console.log(public_id);\r\n    try {\r\n      axios.delete(`/api/profile/removePic/${public_id}`);\r\n      setFormData({\r\n        ...formData,\r\n        profilePicUrl: null,\r\n        public_id: null,\r\n      });\r\n      setAlert('Profile Pic removed', 'success');\r\n      setSpinner(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setAlert('Image not uploaded', 'danger');\r\n      setSpinner(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <br />\r\n      {loadSpinner ? (\r\n        <div class='lds-ripple'>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {/* <div className='loader'></div> */}\r\n\r\n      <form onSubmit={(e) => onSubmit(e)} className='form'>\r\n        <div className='form-group'>\r\n          <input\r\n            className='form-control'\r\n            name='profilePic'\r\n            type='file'\r\n            onChange={(e) => {\r\n              setImage(e.target.files[0]);\r\n              console.log(e.target.files[0]);\r\n            }}\r\n          />\r\n          <button\r\n            onClick={() => {\r\n              setSpinner(true);\r\n              fileUpload();\r\n            }}\r\n            type='button'\r\n            className='btn btn-primary'\r\n          >\r\n            Upload Image\r\n          </button>\r\n          {profilePicUrl && (\r\n            <button\r\n              onClick={() => {\r\n                setSpinner(true);\r\n                removeProfilePic();\r\n              }}\r\n              className='btn btn-danger'\r\n            >\r\n              Remove Profile Pic\r\n            </button>\r\n          )}\r\n        </div>\r\n        {profilePicUrl ? (\r\n          <p className='lead'>\r\n            You can Upload or Remove Pic. Click on Submit to view changes\r\n          </p>\r\n        ) : (\r\n          <p>It seems there is no profile, Do update one</p>\r\n        )}\r\n\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => {\r\n              toggleSocialInput(!displaySocialInputs);\r\n            }}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {displaySocialInputs && (\r\n          <>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={linkedlin}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Linkedin URL'\r\n                name='linkedlin'\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  createProfile,\r\n  getCurrentProfile,\r\n  setAlert,\r\n})(withRouter(EditProfile));\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\AddEducation.js",["212"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import e from 'express';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addEducation(formData, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 class='large text-primary'>Add An Education</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any school or bootcamps that you\r\n        have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form onSubmit={(e) => onSubmit(e)} class='form'>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Your School'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Your Degree'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n            name='fieldofstudy'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n            name='from'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              value={current}\r\n              checked={current}\r\n              value={degree}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n              name='current'\r\n            />{' '}\r\n            Current Degree/Programme\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            name='to'\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />{' '}\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Programme Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\Profile.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\AddExperience.js",["213"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import e from 'express';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addExperience(formData, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 class='large text-primary'>Add An Experience</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form onSubmit={(e) => onSubmit(e)} class='form'>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n            name='location'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n            name='from'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              value={current}\r\n              checked={current}\r\n              value={title}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n              name='current'\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            name='to'\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />{' '}\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\Posts.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profiles\\Profiles.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\Post.js",["214"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { getPost } from '../../actions/post';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n  return loading || post == null ? (\r\n    <Spinner></Spinner>\r\n  ) : (\r\n    <>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id}></CommentForm>\r\n      <div className='comments'>\r\n        {post.comments.map((comment) => (\r\n          <CommentItem\r\n            postId={post._id}\r\n            comment={comment}\r\n            key={comment._id}\r\n          ></CommentItem>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\index.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Education.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\profile.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Spinner.js",["215"],"import React, { Fragment } from 'react';\r\nimport spinner from '../../img/spinner.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        alt='Loading....'\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\CommentForm.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\CommentItem.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\post.js",["216"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  DELETE_POST,\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  ADD_POST,\r\n  GET_POST,\r\n  REMOVE_COMMENT,\r\n  ADD_COMMENT,\r\n} from './types';\r\n\r\n// Get the post\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/post');\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addLike = (postid) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/post/like/${postid}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id: postid, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.data.msg, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeLike = (postid) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/post/unlike/${postid}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id: postid, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.data.msg, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePost = (postid) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/post/${postid}`);\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: { id: postid },\r\n    });\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.data.msg, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post('/api/post/', formData, config);\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/post/${id}`);\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/post/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    console.log('In here');\r\n    const res = await axios.delete(`/api/post/comments/${postId}/${commentId}`);\r\n    console.log(res);\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\PostItem.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profiles\\ProfileItem.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\PostForm.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileEducation.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileExperience.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\CreateResume.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileGithub.js",["217"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n  return (\r\n    <div class='profile-github'>\r\n      <h2 class='text-primary my-1'>\r\n        <i class='fab fa-github'></i> Github Repos\r\n        {repos === null ? (\r\n          <Spinner />\r\n        ) : (\r\n          repos.map((repo) => (\r\n            <div class='repo bg-white p-1 my-1'>\r\n              <div>\r\n                <h4>\r\n                  <a\r\n                    href={repo.html_url}\r\n                    target='_blank'\r\n                    rel='noopener noreferrer'\r\n                  >\r\n                    {repo.name}\r\n                  </a>\r\n                </h4>\r\n                <p>{repo.description}</p>\r\n              </div>\r\n              <div>\r\n                <ul>\r\n                  <li className='badge badge-primary'>\r\n                    Stars: {repo.stargazers_count}\r\n                  </li>\r\n                  <li className='badge badge-dark'>\r\n                    Watchers: {repo.watchers}\r\n                  </li>\r\n                  <li className='badge badge-light'>Forks: {repo.forks}</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileAbout.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileTop.js",["218"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '../../img/avatar.jpg';\r\n// import profile from '../../reducers/profile';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    profilePic,\r\n    user: { name },\r\n  },\r\n}) => {\r\n  console.log(profilePic);\r\n  // console.log(profile);\r\n\r\n  return (\r\n    <div className='profile-top bg-primary p-2'>\r\n      <img\r\n        className='round-img my-1'\r\n        src={profilePic === undefined ? Avatar : profilePic.profilePicUrl}\r\n      />\r\n      <h1 className='large'>{name}</h1>\r\n      <p className='lead'>\r\n        {status} {company && <span> at {company}</span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className='icons my-1'>\r\n        {website && (\r\n          <a href={website} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fas fa-globe fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-twitter fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-facebook fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.linkedlin && (\r\n          <a href={social.linkedlin} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-linkedin fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-youtube fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i className='fab fa-instagram fa-2x'></i>\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\profile.js",["219"],"import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initalState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initalState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return { ...state, profile: payload, loading: false };\r\n    case GET_PROFILES:\r\n      return { ...state, profiles: payload, loading: false };\r\n    case GET_REPOS:\r\n      return { ...state, repos: payload, loading: false };\r\n    case PROFILE_ERROR:\r\n      return { ...state, error: payload, loading: false, profile: null };\r\n    case CLEAR_PROFILE:\r\n      return { ...state, profile: null, loading: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\alert.js",["220"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\auth.js",["221"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  AUTH_ERROR,\r\n  USER_LOADED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  DELETE_ACCOUNT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return { ...state, isAuthenticated: true, loading: false, user: payload };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case DELETE_ACCOUNT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\post.js",["222"],"import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: state.posts.filter((post) => post._id !== payload.id),\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","severity":1,"message":"228","line":43,"column":5,"nodeType":"229","messageId":"230","endLine":43,"endColumn":18},{"ruleId":"231","severity":1,"message":"232","line":60,"column":6,"nodeType":"233","endLine":60,"endColumn":25,"suggestions":"234"},{"ruleId":"235","severity":1,"message":"236","line":92,"column":15,"nodeType":"237","endLine":92,"endColumn":29},{"ruleId":"235","severity":1,"message":"236","line":84,"column":15,"nodeType":"237","endLine":84,"endColumn":28},{"ruleId":"231","severity":1,"message":"238","line":14,"column":6,"nodeType":"233","endLine":14,"endColumn":15,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":4,"column":1,"nodeType":"242","endLine":14,"endColumn":3},{"ruleId":"227","severity":1,"message":"243","line":62,"column":11,"nodeType":"229","messageId":"230","endLine":62,"endColumn":14},{"ruleId":"231","severity":1,"message":"244","line":10,"column":6,"nodeType":"233","endLine":10,"endColumn":22,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":22,"column":7,"nodeType":"248","endLine":25,"endColumn":9},{"ruleId":"240","severity":1,"message":"249","line":18,"column":1,"nodeType":"242","endLine":35,"endColumn":2},{"ruleId":"240","severity":1,"message":"249","line":5,"column":1,"nodeType":"242","endLine":15,"endColumn":2},{"ruleId":"240","severity":1,"message":"249","line":19,"column":1,"nodeType":"242","endLine":44,"endColumn":2},{"ruleId":"240","severity":1,"message":"249","line":19,"column":1,"nodeType":"242","endLine":80,"endColumn":2},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"no-unused-vars","'profilePicUrl' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loading', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.profilePic', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'loading', you can also switch to useReducer instead of useState and read 'loading' in the reducer.","ArrayExpression",["252"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["253"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["254"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Unexpected default export of anonymous function","no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.profilePic, profile.skills, profile.social, profile.status, profile.website]",{"range":"261","text":"262"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"263","text":"264"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"265","text":"266"},[2126,2145],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.profilePic, profile.skills, profile.social, profile.status, profile.website]",[502,511],"[getPost, match.params.id]",[344,360],"[getGithubRepos, username]"]