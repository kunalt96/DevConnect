[{"D:\\DevConnect_MERN\\DevConnect\\client\\src\\index.js":"1","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reportWebVitals.js":"2","D:\\DevConnect_MERN\\DevConnect\\client\\src\\App.js":"3","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Navbar.js":"4","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Landing.js":"5","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Login.js":"6","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Register.js":"7","D:\\DevConnect_MERN\\DevConnect\\client\\src\\store.js":"8","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\index.js":"9","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\alert.js":"10","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\types.js":"11","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\alert.js":"12","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Alert.js":"13","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\auth.js":"14","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\auth.js":"15","D:\\DevConnect_MERN\\DevConnect\\client\\src\\utils\\setAuthToken.js":"16","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Dashboard.js":"17","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\routing\\PrivateRoute.js":"18","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\profile.js":"19","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\profile.js":"20","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Spinner.js":"21","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\DashboardActions.js":"23","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\EditProfile.js":"24","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\AddExperience.js":"25","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\AddEducation.js":"26","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Experience.js":"27","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Education.js":"28","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profiles\\Profiles.js":"29","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profiles\\ProfileItem.js":"30","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\Profile.js":"31","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileTop.js":"32","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileAbout.js":"33","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileExperience.js":"34","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileEducation.js":"35","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileGithub.js":"36","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\post.js":"37","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\posts\\Posts.js":"38","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\post.js":"39","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\posts\\PostItem.js":"40","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\posts\\PostForm.js":"41","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\post\\Post.js":"42","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\post\\CommentForm.js":"43","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\post\\CommentItem.js":"44","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\NotFound.js":"45","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\routing\\Routes.js":"46"},{"size":478,"mtime":1607959927711,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"48"},{"size":977,"mtime":1609945211343,"results":"50","hashOfConfig":"48"},{"size":1797,"mtime":1609614008955,"results":"51","hashOfConfig":"48"},{"size":1228,"mtime":1609264822780,"results":"52","hashOfConfig":"48"},{"size":2109,"mtime":1609092930009,"results":"53","hashOfConfig":"48"},{"size":2777,"mtime":1608658724649,"results":"54","hashOfConfig":"48"},{"size":443,"mtime":1608359552838,"results":"55","hashOfConfig":"48"},{"size":243,"mtime":1609613638378,"results":"56","hashOfConfig":"48"},{"size":389,"mtime":1608134777799,"results":"57","hashOfConfig":"48"},{"size":1107,"mtime":1610206788724,"results":"58","hashOfConfig":"48"},{"size":606,"mtime":1608570589054,"results":"59","hashOfConfig":"48"},{"size":628,"mtime":1608658742073,"results":"60","hashOfConfig":"48"},{"size":2278,"mtime":1609663236023,"results":"61","hashOfConfig":"48"},{"size":1050,"mtime":1609267953955,"results":"62","hashOfConfig":"48"},{"size":429,"mtime":1608570581357,"results":"63","hashOfConfig":"48"},{"size":2129,"mtime":1609175990045,"results":"64","hashOfConfig":"48"},{"size":700,"mtime":1609944585041,"results":"65","hashOfConfig":"48"},{"size":1045,"mtime":1610208371268,"results":"66","hashOfConfig":"48"},{"size":5955,"mtime":1610208371302,"results":"67","hashOfConfig":"48"},{"size":311,"mtime":1608823702704,"results":"68","hashOfConfig":"48"},{"size":7057,"mtime":1609176170939,"results":"69","hashOfConfig":"48"},{"size":663,"mtime":1608974584478,"results":"70","hashOfConfig":"48"},{"size":9462,"mtime":1610227777972,"results":"71","hashOfConfig":"48"},{"size":3586,"mtime":1609176170939,"results":"72","hashOfConfig":"48"},{"size":3652,"mtime":1609176170945,"results":"73","hashOfConfig":"48"},{"size":1565,"mtime":1609262525187,"results":"74","hashOfConfig":"48"},{"size":1409,"mtime":1609103804457,"results":"75","hashOfConfig":"48"},{"size":1481,"mtime":1609269127870,"results":"76","hashOfConfig":"48"},{"size":1212,"mtime":1610209085607,"results":"77","hashOfConfig":"48"},{"size":2711,"mtime":1610224718565,"results":"78","hashOfConfig":"48"},{"size":2040,"mtime":1610227548535,"results":"79","hashOfConfig":"48"},{"size":888,"mtime":1609260944711,"results":"80","hashOfConfig":"48"},{"size":1045,"mtime":1609263244183,"results":"81","hashOfConfig":"48"},{"size":1040,"mtime":1609264157342,"results":"82","hashOfConfig":"48"},{"size":1829,"mtime":1609272568342,"results":"83","hashOfConfig":"48"},{"size":1691,"mtime":1609663146754,"results":"84","hashOfConfig":"48"},{"size":1033,"mtime":1609620904773,"results":"85","hashOfConfig":"48"},{"size":3706,"mtime":1609664395805,"results":"86","hashOfConfig":"48"},{"size":2501,"mtime":1609658202934,"results":"87","hashOfConfig":"48"},{"size":1037,"mtime":1609621042570,"results":"88","hashOfConfig":"48"},{"size":1280,"mtime":1609662207253,"results":"89","hashOfConfig":"48"},{"size":1076,"mtime":1609660655970,"results":"90","hashOfConfig":"48"},{"size":1462,"mtime":1609662728879,"results":"91","hashOfConfig":"48"},{"size":316,"mtime":1609943119110,"results":"92","hashOfConfig":"48"},{"size":1926,"mtime":1609945232308,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"wv7crz",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"96"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\DevConnect_MERN\\DevConnect\\client\\src\\index.js",[],["198","199"],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reportWebVitals.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\App.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Navbar.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Landing.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Login.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Register.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\store.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\index.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\alert.js",["200"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\types.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\alert.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Alert.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\auth.js",["201"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n  CLEAR_PROFILE,\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n// Loading register user\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.getItem('token')) {\r\n    setAuthToken(localStorage.getItem('token'));\r\n  }\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// Registering the user\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = JSON.stringify({ name, email, password });\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((element) => {\r\n        dispatch(setAlert(element.msg, 'danger'));\r\n      });\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// User Login\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((element) => {\r\n        dispatch(setAlert(element.message, 'danger'));\r\n      });\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//logut // clear profile\r\n// export const logout = () => dispatch => {\r\n//   dispatch({ type: LOGOUT });\r\n// };\r\n// export const logout = () => {\r\n//   dispatch({ type: LOGOUT });\r\n// };\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT,\r\n  };\r\n};\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\auth.js",["202"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  AUTH_ERROR,\r\n  USER_LOADED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  DELETE_ACCOUNT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return { ...state, isAuthenticated: true, loading: false, user: payload };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case DELETE_ACCOUNT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\utils\\setAuthToken.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Dashboard.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\profile.js",["203"],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\profile.js",["204"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  DELETE_ACCOUNT,\r\n  GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  GET_REPOS,\r\n  UPLOAD_IMAGE,\r\n} from './types';\r\n\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n    console.log(res.data);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const uploadImageToBackend = (formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post('/api/profile/upload', formData);\r\n    console.log(res);\r\n    dispatch({\r\n      type: UPLOAD_IMAGE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const getProfiles = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n  try {\r\n    const res = await axios.get('/api/profile');\r\n    dispatch({\r\n      type: GET_PROFILES,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProfile = (formData, history, edit = false) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    console.log('I am called', edit, formData);\r\n    const res = await axios.post('/api/profile', formData, config);\r\n    dispatch({\r\n      type: GET_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n    if (!edit) history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((element) => {\r\n        dispatch(setAlert(element.msg, 'danger'));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const res = await axios.put('/api/profile/experience', formData, config);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Experience Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((element) => {\r\n        dispatch(setAlert(element.msg, 'danger'));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const res = await axios.put('/api/profile/education', formData, config);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Education Added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((element) => {\r\n        dispatch(setAlert(element.msg, 'danger'));\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteExperince = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Experience Removed', 'warning'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n    dispatch({\r\n      type: UPDATE_PROFILE,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Education  Removed', 'warning'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  console.log('hello');\r\n  if (window.confirm('Are you sure? This cannot be undone')) {\r\n    try {\r\n      await axios.delete(`/api/profile/`);\r\n      dispatch({\r\n        type: CLEAR_PROFILE,\r\n      });\r\n      dispatch({ type: DELETE_ACCOUNT });\r\n      dispatch(setAlert('Account permanently Deleted'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Spinner.js",["205"],"import React, { Fragment } from 'react';\r\nimport spinner from '../../img/spinner.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        alt='Loading....'\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\EditProfile.js",["206"],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\AddExperience.js",["207"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import e from 'express';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addExperience(formData, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 class='large text-primary'>Add An Experience</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form onSubmit={(e) => onSubmit(e)} class='form'>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n            name='location'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n            name='from'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              value={current}\r\n              checked={current}\r\n              value={title}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n              name='current'\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            name='to'\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />{' '}\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile-forms\\AddEducation.js",["208"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import e from 'express';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addEducation(formData, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 class='large text-primary'>Add An Education</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any school or bootcamps that you\r\n        have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form onSubmit={(e) => onSubmit(e)} class='form'>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Your School'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Your Degree'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n            name='fieldofstudy'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n            name='from'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              value={current}\r\n              checked={current}\r\n              value={degree}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n              name='current'\r\n            />{' '}\r\n            Current Degree/Programme\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            name='to'\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />{' '}\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Programme Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\dashboard\\Education.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profiles\\Profiles.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profiles\\ProfileItem.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\Profile.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileTop.js",["209","210"],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileAbout.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileExperience.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileEducation.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\profile\\ProfileGithub.js",["211"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n  return (\r\n    <div class='profile-github'>\r\n      <h2 class='text-primary my-1'>\r\n        <i class='fab fa-github'></i> Github Repos\r\n        {repos === null ? (\r\n          <Spinner />\r\n        ) : (\r\n          repos.map((repo) => (\r\n            <div class='repo bg-white p-1 my-1'>\r\n              <div>\r\n                <h4>\r\n                  <a\r\n                    href={repo.html_url}\r\n                    target='_blank'\r\n                    rel='noopener noreferrer'\r\n                  >\r\n                    {repo.name}\r\n                  </a>\r\n                </h4>\r\n                <p>{repo.description}</p>\r\n              </div>\r\n              <div>\r\n                <ul>\r\n                  <li className='badge badge-primary'>\r\n                    Stars: {repo.stargazers_count}\r\n                  </li>\r\n                  <li className='badge badge-dark'>\r\n                    Watchers: {repo.watchers}\r\n                  </li>\r\n                  <li className='badge badge-light'>Forks: {repo.forks}</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\post.js",["212"],"import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: state.posts.filter((post) => post._id !== payload.id),\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\posts\\Posts.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\post.js",["213"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  DELETE_POST,\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  ADD_POST,\r\n  GET_POST,\r\n  REMOVE_COMMENT,\r\n  ADD_COMMENT,\r\n} from './types';\r\n\r\n// Get the post\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/post');\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addLike = (postid) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/post/like/${postid}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id: postid, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.data.msg, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeLike = (postid) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/post/unlike/${postid}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id: postid, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.data.msg, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePost = (postid) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/post/${postid}`);\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: { id: postid },\r\n    });\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.data.msg, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post('/api/post/', formData, config);\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/post/${id}`);\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/post/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    console.log('In here');\r\n    const res = await axios.delete(`/api/post/comments/${postId}/${commentId}`);\r\n    console.log(res);\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\posts\\PostItem.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\posts\\PostForm.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\post\\Post.js",["214"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { getPost } from '../../actions/post';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n  return loading || post == null ? (\r\n    <Spinner></Spinner>\r\n  ) : (\r\n    <>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id}></CommentForm>\r\n      <div className='comments'>\r\n        {post.comments.map((comment) => (\r\n          <CommentItem\r\n            postId={post._id}\r\n            comment={comment}\r\n            key={comment._id}\r\n          ></CommentItem>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\post\\CommentForm.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\post\\CommentItem.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\NotFound.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\routing\\Routes.js",[],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":5,"column":1,"nodeType":"221","endLine":15,"endColumn":2},{"ruleId":"222","severity":1,"message":"223","line":11,"column":3,"nodeType":"224","messageId":"225","endLine":11,"endColumn":16},{"ruleId":"219","severity":1,"message":"220","line":19,"column":1,"nodeType":"221","endLine":44,"endColumn":2},{"ruleId":"219","severity":1,"message":"220","line":19,"column":1,"nodeType":"221","endLine":42,"endColumn":2},{"ruleId":"222","severity":1,"message":"226","line":11,"column":3,"nodeType":"224","messageId":"225","endLine":11,"endColumn":15},{"ruleId":"219","severity":1,"message":"227","line":4,"column":1,"nodeType":"221","endLine":14,"endColumn":3},{"ruleId":"228","severity":1,"message":"229","line":58,"column":6,"nodeType":"230","endLine":58,"endColumn":25,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":84,"column":15,"nodeType":"234","endLine":84,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":92,"column":15,"nodeType":"234","endLine":92,"endColumn":29},{"ruleId":"222","severity":1,"message":"235","line":3,"column":8,"nodeType":"224","messageId":"225","endLine":3,"endColumn":14},{"ruleId":"236","severity":1,"message":"237","line":21,"column":7,"nodeType":"238","endLine":21,"endColumn":61},{"ruleId":"228","severity":1,"message":"239","line":10,"column":6,"nodeType":"230","endLine":10,"endColumn":22,"suggestions":"240"},{"ruleId":"219","severity":1,"message":"220","line":19,"column":1,"nodeType":"221","endLine":80,"endColumn":2},{"ruleId":"222","severity":1,"message":"241","line":62,"column":11,"nodeType":"224","messageId":"225","endLine":62,"endColumn":14},{"ruleId":"228","severity":1,"message":"242","line":14,"column":6,"nodeType":"230","endLine":14,"endColumn":15,"suggestions":"243"},"no-native-reassign",["244"],"no-negated-in-lhs",["245"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'CLEAR_PROFILE' is defined but never used.","Identifier","unusedVar","'UPLOAD_IMAGE' is defined but never used.","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loading', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.profilePicUrl', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'loading', you can also switch to useReducer instead of useState and read 'loading' in the reducer.","ArrayExpression",["246"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Avatar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["247"],"'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["248"],"no-global-assign","no-unsafe-negation",{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.profilePicUrl, profile.skills, profile.social, profile.status, profile.website]",{"range":"255","text":"256"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"257","text":"258"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"259","text":"260"},[1917,1936],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.profilePicUrl, profile.skills, profile.social, profile.status, profile.website]",[344,360],"[getGithubRepos, username]",[502,511],"[getPost, match.params.id]"]