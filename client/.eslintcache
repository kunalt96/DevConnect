[{"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\index.js":"1","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reportWebVitals.js":"2","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\App.js":"3","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\store.js":"4","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\auth.js":"5","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\utils\\setAuthToken.js":"6","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Landing.js":"7","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Navbar.js":"8","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\routing\\Routes.js":"9","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\types.js":"10","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\alert.js":"11","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\routing\\PrivateRoute.js":"12","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Alert.js":"13","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\NotFound.js":"14","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\Login.js":"15","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\ResetPassword.js":"16","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Dashboard.js":"17","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\Register.js":"18","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\CreateProfile.js":"19","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\EditProfile.js":"20","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\AddEducation.js":"21","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\Profile.js":"22","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\AddExperience.js":"23","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\Posts.js":"24","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profiles\\Profiles.js":"25","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\Post.js":"26","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\index.js":"27","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Education.js":"28","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\profile.js":"29","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\DashboardActions.js":"30","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Experience.js":"31","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Spinner.js":"32","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\CommentForm.js":"33","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\CommentItem.js":"34","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\post.js":"35","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\PostItem.js":"36","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profiles\\ProfileItem.js":"37","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\PostForm.js":"38","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileEducation.js":"39","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileExperience.js":"40","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\CreateResume.js":"41","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileGithub.js":"42","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileAbout.js":"43","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileTop.js":"44","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\profile.js":"45","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\alert.js":"46","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\auth.js":"47","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\post.js":"48","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\index.js":"49","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\UsersData.js":"50","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\adminOverview.js":"51","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\Sidebar.js":"52","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\admin.js":"53","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\Overview.js":"54","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\Analytics.js":"55","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\UserForms.js":"56","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\EditUser.js":"57","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\admin.js":"58","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\ReactSkillsPieChart.js":"59","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\ReactChartsAnalytics.js":"60","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\ReactChartLinePosts.js":"61","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\UsersTable.js":"62","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\UserProfiles.js":"63"},{"size":545,"mtime":1618310209096,"results":"64","hashOfConfig":"65"},{"size":375,"mtime":1612200957079,"results":"66","hashOfConfig":"65"},{"size":1014,"mtime":1612200957037,"results":"67","hashOfConfig":"65"},{"size":443,"mtime":1612200957079,"results":"68","hashOfConfig":"65"},{"size":2972,"mtime":1612200957038,"results":"69","hashOfConfig":"65"},{"size":429,"mtime":1612200957079,"results":"70","hashOfConfig":"65"},{"size":1228,"mtime":1612200957042,"results":"71","hashOfConfig":"65"},{"size":2573,"mtime":1618310209054,"results":"72","hashOfConfig":"65"},{"size":2213,"mtime":1618310209059,"results":"73","hashOfConfig":"65"},{"size":1700,"mtime":1618310209018,"results":"74","hashOfConfig":"65"},{"size":371,"mtime":1612200957037,"results":"75","hashOfConfig":"65"},{"size":700,"mtime":1612200957071,"results":"76","hashOfConfig":"65"},{"size":628,"mtime":1612200957042,"results":"77","hashOfConfig":"65"},{"size":316,"mtime":1612200957043,"results":"78","hashOfConfig":"65"},{"size":2619,"mtime":1614440854535,"results":"79","hashOfConfig":"65"},{"size":2569,"mtime":1612200957040,"results":"80","hashOfConfig":"65"},{"size":2149,"mtime":1618310209052,"results":"81","hashOfConfig":"65"},{"size":2777,"mtime":1612200957040,"results":"82","hashOfConfig":"65"},{"size":9828,"mtime":1621524628581,"results":"83","hashOfConfig":"65"},{"size":13207,"mtime":1621524628599,"results":"84","hashOfConfig":"65"},{"size":3652,"mtime":1612200957064,"results":"85","hashOfConfig":"65"},{"size":3474,"mtime":1612200957067,"results":"86","hashOfConfig":"65"},{"size":3586,"mtime":1612200957065,"results":"87","hashOfConfig":"65"},{"size":1033,"mtime":1612200957045,"results":"88","hashOfConfig":"65"},{"size":2865,"mtime":1618310209058,"results":"89","hashOfConfig":"65"},{"size":1280,"mtime":1612200957044,"results":"90","hashOfConfig":"65"},{"size":347,"mtime":1618310209135,"results":"91","hashOfConfig":"65"},{"size":1409,"mtime":1612200957041,"results":"92","hashOfConfig":"65"},{"size":5683,"mtime":1612200957039,"results":"93","hashOfConfig":"65"},{"size":663,"mtime":1612200957041,"results":"94","hashOfConfig":"65"},{"size":1565,"mtime":1612200957042,"results":"95","hashOfConfig":"65"},{"size":311,"mtime":1612200957043,"results":"96","hashOfConfig":"65"},{"size":1076,"mtime":1612200957043,"results":"97","hashOfConfig":"65"},{"size":1462,"mtime":1612200957044,"results":"98","hashOfConfig":"65"},{"size":3706,"mtime":1612200957039,"results":"99","hashOfConfig":"65"},{"size":2501,"mtime":1612200957045,"results":"100","hashOfConfig":"65"},{"size":1217,"mtime":1618330851317,"results":"101","hashOfConfig":"65"},{"size":1037,"mtime":1612200957045,"results":"102","hashOfConfig":"65"},{"size":1040,"mtime":1612200957068,"results":"103","hashOfConfig":"65"},{"size":1045,"mtime":1612200957068,"results":"104","hashOfConfig":"65"},{"size":2408,"mtime":1612200957066,"results":"105","hashOfConfig":"65"},{"size":1829,"mtime":1612200957069,"results":"106","hashOfConfig":"65"},{"size":888,"mtime":1612200957067,"results":"107","hashOfConfig":"65"},{"size":2338,"mtime":1618310209057,"results":"108","hashOfConfig":"65"},{"size":870,"mtime":1612200957077,"results":"109","hashOfConfig":"65"},{"size":389,"mtime":1612200957076,"results":"110","hashOfConfig":"65"},{"size":1050,"mtime":1612200957077,"results":"111","hashOfConfig":"65"},{"size":1691,"mtime":1612200957077,"results":"112","hashOfConfig":"65"},{"size":1732,"mtime":1618310209051,"results":"113","hashOfConfig":"65"},{"size":802,"mtime":1618310209046,"results":"114","hashOfConfig":"65"},{"size":1618,"mtime":1618310209132,"results":"115","hashOfConfig":"65"},{"size":1061,"mtime":1618310209040,"results":"116","hashOfConfig":"65"},{"size":357,"mtime":1618310209119,"results":"117","hashOfConfig":"65"},{"size":3521,"mtime":1618330851296,"results":"118","hashOfConfig":"65"},{"size":3112,"mtime":1618330851270,"results":"119","hashOfConfig":"65"},{"size":2968,"mtime":1618310209041,"results":"120","hashOfConfig":"65"},{"size":5218,"mtime":1618330851288,"results":"121","hashOfConfig":"65"},{"size":4546,"mtime":1618310209015,"results":"122","hashOfConfig":"65"},{"size":974,"mtime":1618330851307,"results":"123","hashOfConfig":"65"},{"size":958,"mtime":1618330851306,"results":"124","hashOfConfig":"65"},{"size":1992,"mtime":1618330851305,"results":"125","hashOfConfig":"65"},{"size":2620,"mtime":1618330851316,"results":"126","hashOfConfig":"65"},{"size":4365,"mtime":1618310209045,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1hxawl4",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"130"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"130"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"130"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"130"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"130"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"130"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"130"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"130"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"130"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"130"},"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\index.js",[],["275","276"],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reportWebVitals.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\App.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\store.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\auth.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\utils\\setAuthToken.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Landing.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Navbar.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\routing\\Routes.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\types.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\alert.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\routing\\PrivateRoute.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Alert.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\NotFound.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\Login.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\ResetPassword.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Dashboard.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\auth\\Register.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\CreateProfile.js",["277","278","279"],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\EditProfile.js",["280","281","282"],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\AddEducation.js",["283"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import e from 'express';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    current,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addEducation(formData, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 class='large text-primary'>Add An Education</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any school or bootcamps that you\r\n        have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form onSubmit={(e) => onSubmit(e)} class='form'>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Your School'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Your Degree'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n            name='fieldofstudy'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n            name='from'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              value={current}\r\n              checked={current}\r\n              value={degree}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n              name='current'\r\n            />{' '}\r\n            Current Degree/Programme\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            name='to'\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />{' '}\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Programme Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\Profile.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile-forms\\AddExperience.js",["284"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n// import e from 'express';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    addExperience(formData, history);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 class='large text-primary'>Add An Experience</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form onSubmit={(e) => onSubmit(e)} class='form'>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n            name='location'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input\r\n            type='date'\r\n            value={from}\r\n            onChange={(e) => onChange(e)}\r\n            name='from'\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              value={current}\r\n              checked={current}\r\n              value={title}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n              name='current'\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            name='to'\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />{' '}\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\Posts.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profiles\\Profiles.js",["285"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfiles } from '../../actions/profile';\r\nimport ProfileItem from './ProfileItem';\r\n\r\nconst Profiles = ({ profile: { profiles, loading }, getProfiles }) => {\r\n  const [searchDeveloper, setSearchDeveloper] = useState('');\r\n  const [searchProfile, setSearchProfile] = useState([]);\r\n  console.log(profiles);\r\n\r\n  const removeDevelopers = (e) => {\r\n    e.preventDefault();\r\n    let valueProfiles = [];\r\n    let str1 = searchDeveloper.trim().replace(/\\s/g, '').toLowerCase();\r\n    profiles.forEach((value, i) => {\r\n      let searchValue = value.user.name.trim().replace(/\\s/g, '').toLowerCase();\r\n      console.log(searchValue);\r\n      if (searchValue.indexOf(str1) != -1) {\r\n        valueProfiles.push(value);\r\n      }\r\n    });\r\n    setSearchProfile(valueProfiles);\r\n    setSearchDeveloper('');\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <>\r\n      {loading && profiles ? (\r\n        <Spinner></Spinner>\r\n      ) : (\r\n        <>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop'></i>\r\n            Browse and connect with developers\r\n          </p>\r\n          <form onSubmit={removeDevelopers} className='form'>\r\n            <div className='form-group'>\r\n              <input\r\n                placeholder='Search Developers here'\r\n                type='search'\r\n                name='searchDeveloper'\r\n                value={searchDeveloper}\r\n                onChange={(e) => setSearchDeveloper(e.target.value)}\r\n              />\r\n            </div>\r\n          </form>\r\n          <div className='profiles'>\r\n            {searchProfile.length > 0 ? (\r\n              <>\r\n                {' '}\r\n                {searchProfile.map((profile) => {\r\n                  console.log(profiles);\r\n                  return <ProfileItem key={profile._id} profile={profile} />;\r\n                })}{' '}\r\n              </>\r\n            ) : profiles.length > 0 ? (\r\n              <>\r\n                {' '}\r\n                {profiles.map((profile) => {\r\n                  console.log(profiles);\r\n                  return <ProfileItem key={profile._id} profile={profile} />;\r\n                })}{' '}\r\n              </>\r\n            ) : (\r\n              <h4>No Profiles found</h4>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\Post.js",["286"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { getPost } from '../../actions/post';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n  return loading || post == null ? (\r\n    <Spinner></Spinner>\r\n  ) : (\r\n    <>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id}></CommentForm>\r\n      <div className='comments'>\r\n        {post.comments.map((comment) => (\r\n          <CommentItem\r\n            postId={post._id}\r\n            comment={comment}\r\n            key={comment._id}\r\n          ></CommentItem>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  post: state.post,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getPost })(Post);\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\index.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Education.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\profile.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\DashboardActions.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\dashboard\\Experience.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\layout\\Spinner.js",["287"],"import React, { Fragment } from 'react';\r\nimport spinner from '../../img/spinner.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        alt='Loading....'\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\CommentForm.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\post\\CommentItem.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\post.js",["288"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  DELETE_POST,\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  ADD_POST,\r\n  GET_POST,\r\n  REMOVE_COMMENT,\r\n  ADD_COMMENT,\r\n} from './types';\r\n\r\n// Get the post\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/post');\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addLike = (postid) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/post/like/${postid}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id: postid, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.data.msg, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeLike = (postid) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/post/unlike/${postid}`);\r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { id: postid, likes: res.data },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.data.msg, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePost = (postid) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/post/${postid}`);\r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: { id: postid },\r\n    });\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.data.msg, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addPost = (formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post('/api/post/', formData, config);\r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/post/${id}`);\r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const addComment = (postId, formData) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/post/comment/${postId}`,\r\n      formData,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data,\r\n    });\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    console.log('In here');\r\n    const res = await axios.delete(`/api/post/comments/${postId}/${commentId}`);\r\n    console.log(res);\r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n      payload: commentId,\r\n    });\r\n    dispatch(setAlert('Comment Removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\PostItem.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profiles\\ProfileItem.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\posts\\PostForm.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileEducation.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileExperience.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\CreateResume.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileGithub.js",["289"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n  return (\r\n    <div class='profile-github'>\r\n      <h2 class='text-primary my-1'>\r\n        <i class='fab fa-github'></i> Github Repos\r\n        {repos === null ? (\r\n          <Spinner />\r\n        ) : (\r\n          repos.map((repo) => (\r\n            <div class='repo bg-white p-1 my-1'>\r\n              <div>\r\n                <h4>\r\n                  <a\r\n                    href={repo.html_url}\r\n                    target='_blank'\r\n                    rel='noopener noreferrer'\r\n                  >\r\n                    {repo.name}\r\n                  </a>\r\n                </h4>\r\n                <p>{repo.description}</p>\r\n              </div>\r\n              <div>\r\n                <ul>\r\n                  <li className='badge badge-primary'>\r\n                    Stars: {repo.stargazers_count}\r\n                  </li>\r\n                  <li className='badge badge-dark'>\r\n                    Watchers: {repo.watchers}\r\n                  </li>\r\n                  <li className='badge badge-light'>Forks: {repo.forks}</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileAbout.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\profile\\ProfileTop.js",["290"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '../../img/avatar.jpg';\r\n// import profile from '../../reducers/profile';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    profilePic,\r\n    user: { name },\r\n  },\r\n}) => {\r\n  console.log(profilePic);\r\n  // console.log(profile);\r\n\r\n  return (\r\n    <div className='profile-top bg-light p-2'>\r\n      <img\r\n        className='round-img my-1'\r\n        src={profilePic === undefined ? Avatar : profilePic.profilePicUrl}\r\n      />\r\n      <h1 className='large'>{name}</h1>\r\n      <p className='lead'>\r\n        {status} {company && <span> at {company}</span>}\r\n      </p>\r\n      <p>{location && <span>{location}</span>}</p>\r\n      <div className='icons my-1'>\r\n        {website && (\r\n          <a href={website} target='_blank' rel='noopener noreferrer'>\r\n            <i style={{ color: 'black' }} className='fas fa-globe fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.twitter && (\r\n          <a href={social.twitter} target='_blank' rel='noopener noreferrer'>\r\n            <i style={{ color: 'black' }} className='fab fa-twitter fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.facebook && (\r\n          <a href={social.facebook} target='_blank' rel='noopener noreferrer'>\r\n            <i style={{ color: 'black' }} className='fab fa-facebook fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.linkedlin && (\r\n          <a href={social.linkedlin} target='_blank' rel='noopener noreferrer'>\r\n            <i style={{ color: 'black' }} className='fab fa-linkedin fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.youtube && (\r\n          <a href={social.youtube} target='_blank' rel='noopener noreferrer'>\r\n            <i style={{ color: 'black' }} className='fab fa-youtube fa-2x'></i>\r\n          </a>\r\n        )}\r\n        {social && social.instagram && (\r\n          <a href={social.instagram} target='_blank' rel='noopener noreferrer'>\r\n            <i\r\n              style={{ color: 'black' }}\r\n              className='fab fa-instagram fa-2x'\r\n            ></i>\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProfileTop;\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\profile.js",["291"],"import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initalState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initalState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return { ...state, profile: payload, loading: false };\r\n    case GET_PROFILES:\r\n      return { ...state, profiles: payload, loading: false };\r\n    case GET_REPOS:\r\n      return { ...state, repos: payload, loading: false };\r\n    case PROFILE_ERROR:\r\n      return { ...state, error: payload, loading: false, profile: null };\r\n    case CLEAR_PROFILE:\r\n      return { ...state, profile: null, loading: true };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\alert.js",["292"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\auth.js",["293"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  AUTH_ERROR,\r\n  USER_LOADED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  DELETE_ACCOUNT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return { ...state, isAuthenticated: true, loading: false, user: payload };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case DELETE_ACCOUNT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\post.js",["294"],"import {\r\n  GET_POSTS,\r\n  POST_ERROR,\r\n  UPDATE_LIKES,\r\n  DELETE_POST,\r\n  ADD_POST,\r\n  GET_POST,\r\n  ADD_COMMENT,\r\n  REMOVE_COMMENT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n        loading: false,\r\n      };\r\n    case GET_POST:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n        loading: false,\r\n      };\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n        loading: false,\r\n      };\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: state.posts.filter((post) => post._id !== payload.id),\r\n      };\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: state.posts.map((post) =>\r\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n        ),\r\n      };\r\n    case ADD_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: { ...state.post, comments: payload },\r\n        loading: false,\r\n      };\r\n    case REMOVE_COMMENT:\r\n      return {\r\n        ...state,\r\n        post: {\r\n          ...state.post,\r\n          comments: state.post.comments.filter(\r\n            (comment) => comment._id !== payload\r\n          ),\r\n        },\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\index.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\UsersData.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\adminOverview.js",["295"],"import {\r\n  GET_OVERVIEW_DATA,\r\n  GET_ANALYTICS_DATA,\r\n  GET_USERS_DATA,\r\n  GET_PROFILES_INFO,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  experienceDevelopers: 0,\r\n  totalImagesUploaded: 0,\r\n  totalPosts: 0,\r\n  totalUsers: 0,\r\n  usersWithProfiles: 0,\r\n  barGraphDataUsers: {},\r\n  pieChartTotalSkills: {},\r\n  developersStatusPie: {},\r\n  retrievedUsers: [],\r\n  userProfiles: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  console.log(action);\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_OVERVIEW_DATA:\r\n      console.log(payload);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        experienceDevelopers: payload.experienceDevelopers.data,\r\n        totalImagesUploaded: payload.totalImagesUploaded.data,\r\n        totalPosts: payload.totalPosts.data,\r\n        totalUsers: payload.totalUsers.data,\r\n        usersWithProfiles: payload.usersWithProfiles.data,\r\n      };\r\n    case GET_ANALYTICS_DATA:\r\n      console.log('IN HERE');\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        barGraphDataUsers: payload.dataBarGraph,\r\n        pieChartTotalSkills: payload.dataSkillsPie,\r\n        developersStatusPie: payload.developersStatusPie,\r\n        postsMadeMonthLine: payload.postsMadeMonthLine,\r\n      };\r\n    case GET_USERS_DATA:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        retrievedUsers: payload,\r\n      };\r\n    case GET_PROFILES_INFO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        userProfiles: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\Sidebar.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\reducers\\admin.js",["296"],"import { GET_ALL_USERS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  users: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_ALL_USERS:\r\n      return { ...state, loading: false, users: payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\Overview.js",["297","298"],"import React, { useEffect } from 'react';\r\nimport { getOverViewData } from '../../actions/admin';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './Overview.css';\r\nimport UsersTable from './UsersTable';\r\nimport AdminLoader from '../../img/adminLoader.gif';\r\n\r\nconst Overview = ({\r\n  getOverViewData,\r\n  adminOverview: {\r\n    loading,\r\n    totalUsers,\r\n    usersWithProfiles,\r\n    totalPosts,\r\n    experienceDevelopers,\r\n    totalImagesUploaded,\r\n  },\r\n}) => {\r\n  useEffect(() => {\r\n    getOverViewData();\r\n  }, []);\r\n\r\n  if (loading)\r\n    return (\r\n      <>\r\n        <div className='styleSpinner'>\r\n          <img src={AdminLoader} style={{ width: '100px', height: '100px' }} />\r\n        </div>\r\n      </>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      {!loading && (\r\n        <>\r\n          <h1 style={{ color: '#17a2b8' }}>Overview</h1>\r\n          <br />\r\n          <div className='row'>\r\n            <div className='column'>\r\n              <div className='card'>\r\n                <h6>Total Users</h6>\r\n                <p>\r\n                  <span>\r\n                    <i style={{ fontSize: '36px' }} className='fas fa-user'></i>\r\n                  </span>\r\n                  {totalUsers}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='column'>\r\n              <div className='card'>\r\n                <h6>Total Profiles</h6>\r\n                <p>\r\n                  <span>\r\n                    <i\r\n                      style={{ fontSize: '36px' }}\r\n                      className='far fa-id-card'\r\n                    ></i>\r\n                  </span>\r\n                  {usersWithProfiles}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='column'>\r\n              <div className='card'>\r\n                <h6>Total Posts</h6>\r\n                <p>\r\n                  <span>\r\n                    <i\r\n                      style={{ fontSize: '36px' }}\r\n                      className='fas fa-newspaper'\r\n                    ></i>\r\n                  </span>\r\n                  {totalPosts}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='column'>\r\n              <div className='card'>\r\n                <h6>Experienced Developers</h6>\r\n                <p>\r\n                  <span>\r\n                    <i\r\n                      className='fas fa-award'\r\n                      style={{ fontSize: '36px' }}\r\n                    ></i>\r\n                  </span>\r\n                  {experienceDevelopers}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className='column'>\r\n              <div className='card'>\r\n                <h6>Total Images Uploaded</h6>\r\n                <p>\r\n                  <span>\r\n                    <i\r\n                      className='fas fa-camera'\r\n                      style={{ fontSize: '36px' }}\r\n                    ></i>\r\n                  </span>\r\n                  {totalImagesUploaded}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className='table-users'>\r\n            <h3>Users Table</h3>\r\n            <UsersTable />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nOverview.propTypes = {\r\n  getOverViewData: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  adminOverview: state.adminOverview,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOverViewData })(Overview);\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\Analytics.js",["299"],"import React, { Component } from 'react';\r\nimport UserBarGraph from './ReactChartsAnalytics';\r\nimport UsersPieChart from './ReactSkillsPieChart';\r\nimport ReactChartLinePosts from './ReactChartLinePosts';\r\nimport { connect } from 'react-redux';\r\nimport { getAnalyticsData } from '../../actions/admin';\r\nimport './Analytics.css';\r\n\r\nclass Analytics extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  async componentDidMount() {\r\n    try {\r\n      this.props.getAnalyticsData();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      adminOverviewBarGraph: {\r\n        barGraphDataUsers,\r\n        loading,\r\n        pieChartTotalSkills,\r\n        developersStatusPie,\r\n        postsMadeMonthLine,\r\n      },\r\n    } = this.props;\r\n    if (loading) return <h1>Loading data</h1>;\r\n    return (\r\n      <>\r\n        <h1 style={{ color: '#17a2b8' }}>Analytics</h1>\r\n        <br />{' '}\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          <div className='card-graph'>\r\n            <div className='container-graph'>\r\n              {barGraphDataUsers &&\r\n                barGraphDataUsers.options &&\r\n                barGraphDataUsers.series && (\r\n                  <UserBarGraph\r\n                    options={barGraphDataUsers?.options?.xaxis.categories}\r\n                    series={barGraphDataUsers?.series.data}\r\n                  />\r\n                )}\r\n            </div>\r\n          </div>\r\n          <div className='card-graph'>\r\n            <div className='container-graph'>\r\n              {pieChartTotalSkills &&\r\n                pieChartTotalSkills.options &&\r\n                pieChartTotalSkills.series && (\r\n                  <UsersPieChart\r\n                    options={pieChartTotalSkills.options}\r\n                    series={pieChartTotalSkills.series}\r\n                    title={'Developers by Skills'}\r\n                  />\r\n                )}\r\n            </div>\r\n          </div>\r\n          <div className='card-graph'>\r\n            <div className='container-graph'>\r\n              {developersStatusPie &&\r\n                developersStatusPie.options &&\r\n                developersStatusPie.series && (\r\n                  <UsersPieChart\r\n                    options={developersStatusPie.options}\r\n                    series={developersStatusPie.series}\r\n                    title={'Developer Status'}\r\n                  />\r\n                )}\r\n            </div>\r\n          </div>\r\n          <div className='card-graph'>\r\n            <div className='container-graph'>\r\n              {postsMadeMonthLine && (\r\n                <ReactChartLinePosts data={postsMadeMonthLine} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  adminOverviewBarGraph: state.adminOverview,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getAnalyticsData })(Analytics);\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\UserForms.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\EditUser.js",["300","301"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport './EditUser.css';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { editUsersData, updateData } from '../../actions/admin';\r\nimport Moment from 'react-moment';\r\nimport AdminLoader from '../../img/adminLoader.gif';\r\n\r\nfunction EditUser({\r\n  editUsersData,\r\n  adminObj: { loading, retrievedUsers },\r\n  updateData,\r\n}) {\r\n  const [input, setInput] = useState({ searchData: '' });\r\n  const [result, setResult] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const inputRef = useRef();\r\n  const [isEdit, setEdit] = useState(false);\r\n  const [editData, setData] = useState({ email: '', name: '', id: '' });\r\n  const [userId, setUserId] = useState('');\r\n\r\n  const { email, name } = editData;\r\n\r\n  useEffect(() => {\r\n    inputRef.current = _.debounce(onSearchText, 1000);\r\n  }, []);\r\n\r\n  const onSearchText = (value) => {\r\n    setLoading(true);\r\n    editUsersData(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(false);\r\n    setResult(retrievedUsers);\r\n  }, [retrievedUsers]);\r\n\r\n  useEffect(() => {\r\n    inputRef.current(input);\r\n  }, [input]);\r\n\r\n  const handleChange = (e) => {\r\n    const inputData = e.target.value;\r\n    setInput({ searchData: inputData });\r\n  };\r\n\r\n  const onEditClick = (user) => {\r\n    setUserId(user._id);\r\n    setEdit(true);\r\n    setData({ email: user.email, name: user.name, id: user._id });\r\n  };\r\n\r\n  const updateDatahERE = () => {\r\n    setEdit(false);\r\n    updateData(editData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <input\r\n        type='search'\r\n        name='search'\r\n        placeholder='Search User by Email and Name'\r\n        className='search-user'\r\n        value={input.searchData}\r\n        onChange={handleChange}\r\n      />\r\n      <br />\r\n      <br />\r\n      {isLoading && (\r\n        // <div className='overlay-it'>\r\n        //   <p className='overlay-text'>Loading data</p>\r\n        // </div>\r\n        <div className='overlay-it'>\r\n          <img\r\n            className='overlay-text'\r\n            src={AdminLoader}\r\n            style={{ width: '100px', height: '100px' }}\r\n          />\r\n        </div>\r\n      )}\r\n      <div class='align-card-user'>\r\n        {result &&\r\n          result.length > 0 &&\r\n          result.map((user) => {\r\n            return (\r\n              <div key={user._id} className='display-card'>\r\n                <div className='container-card'>\r\n                  {isEdit && userId === user._id ? (\r\n                    <>\r\n                      <input\r\n                        type='text'\r\n                        style={{\r\n                          width: '100%',\r\n                          padding: '5px',\r\n                          marginTop: '5px',\r\n                        }}\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                          setData({ ...editData, email: e.target.value });\r\n                        }}\r\n                      ></input>\r\n                    </>\r\n                  ) : (\r\n                    <h4>Name: {user.name}</h4>\r\n                  )}\r\n                  {isEdit && userId === user._id ? (\r\n                    <>\r\n                      {' '}\r\n                      <input\r\n                        style={{\r\n                          width: '100%',\r\n                          padding: '5px',\r\n                          marginTop: '5px',\r\n                        }}\r\n                        type='text'\r\n                        value={name}\r\n                        onChange={(e) => {\r\n                          setData({ ...editData, name: e.target.value });\r\n                        }}\r\n                      ></input>\r\n                    </>\r\n                  ) : (\r\n                    <p>Email Id: {user.email}</p>\r\n                  )}\r\n                  <p>\r\n                    Account Date:{' '}\r\n                    <Moment format='YYYY/MM/DD'>{user.date}</Moment>\r\n                  </p>\r\n                  <p>Role : {user.isAdmin ? 'Admin' : 'User'}</p>\r\n                  {isEdit && userId === user._id ? (\r\n                    <>\r\n                      <button\r\n                        onClick={updateDatahERE}\r\n                        className='btn btn-primary'\r\n                      >\r\n                        <i class='fas fa-check-circle'></i>\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <button\r\n                      onClick={() => {\r\n                        onEditClick(user);\r\n                      }}\r\n                      className='btn btn-primary'\r\n                    >\r\n                      <i class='fas fa-edit'></i>\r\n                    </button>\r\n                  )}\r\n                </div>\r\n                <br />\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nEditUser.propTypes = {\r\n  editUsersData: PropTypes.func.isRequired,\r\n  updateData: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  adminObj: state.adminOverview,\r\n});\r\n\r\nexport default connect(mapStateToProps, { editUsersData, updateData })(\r\n  EditUser\r\n);\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\actions\\admin.js",["302","303","304"],"import {\r\n  GET_ALL_USERS,\r\n  GET_OVERVIEW_DATA,\r\n  GET_ANALYTICS_DATA,\r\n  GET_USERS_DATA,\r\n  GET_PROFILES_INFO,\r\n} from './types';\r\nimport axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nexport const callAllUsers = () => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get('/api/admin/usersData');\r\n    dispatch({\r\n      type: GET_ALL_USERS,\r\n      payload: response.data,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    dispatch(setAlert(errors, 'danger'));\r\n  }\r\n};\r\n\r\nexport const getOverViewData = () => async (dispatch) => {\r\n  try {\r\n    const totalUsers = await axios.get('/api/admin/usersData?data=totalUsers');\r\n    const usersWithProfiles = await axios.get(\r\n      '/api/admin/usersProfiles?data=totalProfiles'\r\n    );\r\n    const totalPosts = await axios.get(\r\n      '/api/admin/retrievePosts?data=totalPosts'\r\n    );\r\n    const totalImagesUploaded = await axios.get('/api/admin/totalImages');\r\n    const experienceDevelopers = await axios.get(\r\n      '/api/admin/experienceDevelopers'\r\n    );\r\n    let payLoadData = {\r\n      totalUsers,\r\n      usersWithProfiles,\r\n      totalPosts,\r\n      experienceDevelopers,\r\n      totalImagesUploaded,\r\n    };\r\n    console.log(payLoadData);\r\n    dispatch({\r\n      type: GET_OVERVIEW_DATA,\r\n      payload: payLoadData,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    dispatch(setAlert('Server Error', 'danger'));\r\n  }\r\n};\r\n\r\nexport const getAnalyticsData = () => async (dispatch) => {\r\n  try {\r\n    const dataBarGraph = await axios.get('/api/admin/analytics?data=usersData');\r\n    const dataSkillsPie = await axios.get(\r\n      '/api/admin/analytics?data=skillsPerecentage'\r\n    );\r\n    const developersStatusPie = await axios.get(\r\n      '/api/admin/analytics?data=developersRolePerecentage'\r\n    );\r\n    const postsMadeMonthLine = await axios.get(\r\n      '/api/admin/analytics?data=postsActivity'\r\n    );\r\n    let finalObj = {\r\n      dataSkillsPie: dataSkillsPie.data,\r\n      dataBarGraph: dataBarGraph.data,\r\n      developersStatusPie: developersStatusPie.data,\r\n      postsMadeMonthLine: postsMadeMonthLine.data,\r\n    };\r\n    dispatch({\r\n      type: GET_ANALYTICS_DATA,\r\n      payload: finalObj,\r\n    });\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    dispatch(setAlert('Server Error', 'danger'));\r\n  }\r\n};\r\n\r\nexport const adminRegister = ({ name, email, password }) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n  const body = JSON.stringify({ name, email, password });\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n    dispatch(setAlert(`User with ${email} registered`, 'success'));\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((element) => {\r\n        dispatch(setAlert(element.msg, 'danger'));\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const editUsersData = ({ searchData }) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const body = JSON.stringify({ searchData });\r\n    const resp = await axios.put('/api/admin/retrieveUser', body, config);\r\n    dispatch({\r\n      type: GET_USERS_DATA,\r\n      payload: resp.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(setAlert('Error while getting data', 'danger'));\r\n  }\r\n};\r\n\r\nexport const updateData = ({ email, name, id }) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    console.log(email, name, id);\r\n    console.log('IN HERE');\r\n    const body = JSON.stringify({ email, name });\r\n    const resp = await axios.put(`/api/admin/editData/${id}`, body, config);\r\n    if (resp) {\r\n      console.log(resp);\r\n      dispatch(setAlert('User details succesfully Updated', 'success'));\r\n      let origin = window.location.origin;\r\n      setTimeout(() => {\r\n        window.location.assign(`${origin}/adminComponent`);\r\n      }, 3000);\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(setAlert('Error In editing data', 'danger'));\r\n  }\r\n};\r\n\r\nexport const getProfiles = () => async (dispatch) => {\r\n  try {\r\n    const resp = await axios.get('/api/profile');\r\n    dispatch({\r\n      type: GET_PROFILES_INFO,\r\n      payload: resp.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch(setAlert('Error in fetching profiles', 'danger'));\r\n  }\r\n};\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\ReactSkillsPieChart.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\ReactChartsAnalytics.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\ReactChartLinePosts.js",[],"D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\UsersTable.js",["305"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { callAllUsers } from '../../actions/admin';\r\nimport PropTypes from 'prop-types';\r\nimport Profiles from '../profiles/Profiles';\r\nimport Moment from 'react-moment';\r\n\r\nfunction UsersTable({ adminObj: { loading, users }, callAllUsers }) {\r\n  const [searchItem, setSearchItem] = useState('');\r\n  const [userDetails, setUsers] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    callAllUsers();\r\n  }, [callAllUsers]);\r\n\r\n  useEffect(() => {\r\n    setUsers(users);\r\n  }, [users]);\r\n\r\n  useEffect(() => {\r\n    filterData();\r\n  }, [searchItem]);\r\n\r\n  const filterData = () => {\r\n    if (searchItem.length > 1) {\r\n      const searchFilter = searchItem.toLowerCase();\r\n      const filtering = userDetails.filter((user) => {\r\n        return Object.keys(user).some((key) => {\r\n          return user[key].toString().toLowerCase().includes(searchFilter);\r\n        });\r\n      });\r\n      setFilteredData(filtering);\r\n    } else {\r\n      setFilteredData([]);\r\n    }\r\n  };\r\n\r\n  const tableCreation = (value) => {\r\n    return value.map((user) => (\r\n      <tr key={user._id}>\r\n        <td>{user.name}</td>\r\n        <td>{user.email}</td>\r\n        <td>\r\n          <Moment format='YYYY/MM/DD'>{user.date}</Moment>\r\n        </td>\r\n        <td>{user.isAdmin ? 'Admin' : 'User'}</td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  const usersTable =\r\n    filteredData.length > 0\r\n      ? tableCreation(filteredData)\r\n      : tableCreation(userDetails);\r\n\r\n  if (loading) return <p className='my-3'>Date Loading...</p>;\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <div className='form'>\r\n        <input\r\n          value={searchItem}\r\n          onChange={(e) => {\r\n            setSearchItem(e.target.value);\r\n          }}\r\n          placeholder='Search with Name or Email or Date'\r\n          type='search'\r\n        />\r\n      </div>\r\n      <table style={{ width: '100%', marginTop: '20px' }} className='table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email Id</th>\r\n            <th>Account Opening Date</th>\r\n            <th>Role</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {(filteredData.length > 0 || userDetails.length > 0) && usersTable}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nProfiles.propTypes = {\r\n  callAllUsers: PropTypes.func.isRequired,\r\n  users: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  adminObj: state.admin,\r\n});\r\n\r\nexport default connect(mapStateToProps, { callAllUsers })(UsersTable);\r\n","D:\\DevConnect_MERN\\DevKonnector\\DevConnect\\client\\src\\components\\admin\\UserProfiles.js",["306","307","308"],"import React, { useEffect } from 'react';\r\nimport './UserProfiles.css';\r\nimport AvatarImage from '../../img/avatarImage.PNG';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getProfiles } from '../../actions/admin';\r\nimport AdminLoader from '../../img/adminLoader.gif';\r\n\r\nconst UserProfiles = ({ adminObj: { userProfiles, loading }, getProfiles }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, []);\r\n  if (loading)\r\n    return (\r\n      <>\r\n        <div className='styleSpinner'>\r\n          <img src={AdminLoader} style={{ width: '100px', height: '100px' }} />\r\n        </div>\r\n      </>\r\n    );\r\n  return (\r\n    <>\r\n      <h1 style={{ color: '#17a2b8' }}>User Profiles</h1>\r\n      <div className='container-profile-disp-card'>\r\n        {userProfiles &&\r\n          userProfiles.length > 0 &&\r\n          userProfiles.map((profile) => {\r\n            return (\r\n              <div key={profile._id} className='profile-disp-card'>\r\n                {profile.profilePic ? (\r\n                  <img\r\n                    src={profile.profilePic.profilePicUrl}\r\n                    alt='John'\r\n                    style={{ width: '100%', height: '300px' }}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    src={AvatarImage}\r\n                    style={{ width: '100%', height: '300px' }}\r\n                  ></img>\r\n                )}\r\n                <h1>{profile.user.name}</h1>\r\n                <p className='title'>\r\n                  {profile.status} {profile.company && `at ${profile.company}`}\r\n                </p>\r\n                {profile.bio ? <p>{profile.bio}</p> : <p>No bio updated</p>}\r\n\r\n                <div style={{ margin: '24px 0' }}>\r\n                  {profile.social ? (\r\n                    <>\r\n                      {profile.social.instagram.length > 0 && (\r\n                        <a\r\n                          className='profile-link'\r\n                          href={profile.social.instagram}\r\n                          target='_blank'\r\n                          rel='noopener noreferrer'\r\n                        >\r\n                          <i\r\n                            style={{ color: 'black' }}\r\n                            className='fab fa-instagram fa-2x'\r\n                          ></i>\r\n                        </a>\r\n                      )}\r\n                      {profile.social.twitter.length > 0 && (\r\n                        <a\r\n                          className='profile-link'\r\n                          href={profile.social.twitter}\r\n                          target='_blank'\r\n                          rel='noopener noreferrer'\r\n                        >\r\n                          <i\r\n                            style={{ color: 'black' }}\r\n                            className='fab fa-twitter fa-2x'\r\n                          ></i>\r\n                        </a>\r\n                      )}\r\n                      {profile.social.linkedlin.length > 0 && (\r\n                        <a\r\n                          className='profile-link'\r\n                          href={profile.social.linkedlin}\r\n                          target='_blank'\r\n                          rel='noopener noreferrer'\r\n                        >\r\n                          <i\r\n                            style={{ color: 'black' }}\r\n                            className='fab fa-linkedin fa-2x'\r\n                          ></i>\r\n                        </a>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <p>No social credentials</p>\r\n                      <br />\r\n                    </>\r\n                  )}\r\n                </div>\r\n                <p style={{ marginBottom: '0px' }}>\r\n                  <a\r\n                    href={`mailto:${profile.user.email}`}\r\n                    className='profile-button'\r\n                  >\r\n                    Contact\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nUserProfiles.propTypes = {\r\n  adminObj: PropTypes.object.isRequired,\r\n  getProfiles: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  adminObj: state.adminOverview,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfiles })(UserProfiles);\r\n",{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","severity":1,"message":"314","line":40,"column":5,"nodeType":"315","messageId":"316","endLine":40,"endColumn":11},{"ruleId":"313","severity":1,"message":"317","line":46,"column":5,"nodeType":"315","messageId":"316","endLine":46,"endColumn":18},{"ruleId":"318","severity":1,"message":"319","line":64,"column":45,"nodeType":"320","messageId":"321","endLine":64,"endColumn":47},{"ruleId":"322","severity":1,"message":"323","line":64,"column":6,"nodeType":"324","endLine":64,"endColumn":25,"suggestions":"325"},{"ruleId":"313","severity":1,"message":"314","line":73,"column":5,"nodeType":"315","messageId":"316","endLine":73,"endColumn":11},{"ruleId":"318","severity":1,"message":"319","line":99,"column":45,"nodeType":"320","messageId":"321","endLine":99,"endColumn":47},{"ruleId":"326","severity":1,"message":"327","line":92,"column":15,"nodeType":"328","endLine":92,"endColumn":29},{"ruleId":"326","severity":1,"message":"327","line":84,"column":15,"nodeType":"328","endLine":84,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":20,"column":37,"nodeType":"320","messageId":"321","endLine":20,"endColumn":39},{"ruleId":"322","severity":1,"message":"329","line":14,"column":6,"nodeType":"324","endLine":14,"endColumn":15,"suggestions":"330"},{"ruleId":"331","severity":1,"message":"332","line":4,"column":1,"nodeType":"333","endLine":14,"endColumn":3},{"ruleId":"313","severity":1,"message":"334","line":62,"column":11,"nodeType":"315","messageId":"316","endLine":62,"endColumn":14},{"ruleId":"322","severity":1,"message":"335","line":10,"column":6,"nodeType":"324","endLine":10,"endColumn":22,"suggestions":"336"},{"ruleId":"337","severity":1,"message":"338","line":22,"column":7,"nodeType":"339","endLine":25,"endColumn":9},{"ruleId":"331","severity":1,"message":"340","line":18,"column":1,"nodeType":"333","endLine":35,"endColumn":2},{"ruleId":"331","severity":1,"message":"340","line":5,"column":1,"nodeType":"333","endLine":15,"endColumn":2},{"ruleId":"331","severity":1,"message":"340","line":19,"column":1,"nodeType":"333","endLine":44,"endColumn":2},{"ruleId":"331","severity":1,"message":"340","line":19,"column":1,"nodeType":"333","endLine":80,"endColumn":2},{"ruleId":"331","severity":1,"message":"340","line":22,"column":1,"nodeType":"333","endLine":62,"endColumn":2},{"ruleId":"331","severity":1,"message":"340","line":8,"column":1,"nodeType":"333","endLine":16,"endColumn":2},{"ruleId":"322","severity":1,"message":"341","line":22,"column":6,"nodeType":"324","endLine":22,"endColumn":8,"suggestions":"342"},{"ruleId":"337","severity":1,"message":"338","line":28,"column":11,"nodeType":"339","endLine":28,"endColumn":80},{"ruleId":"343","severity":1,"message":"344","line":10,"column":3,"nodeType":"345","messageId":"346","endLine":12,"endColumn":4},{"ruleId":"322","severity":1,"message":"347","line":27,"column":6,"nodeType":"324","endLine":27,"endColumn":8,"suggestions":"348"},{"ruleId":"337","severity":1,"message":"338","line":77,"column":11,"nodeType":"339","endLine":81,"endColumn":13},{"ruleId":"313","severity":1,"message":"349","line":50,"column":11,"nodeType":"315","messageId":"316","endLine":50,"endColumn":17},{"ruleId":"313","severity":1,"message":"349","line":78,"column":11,"nodeType":"315","messageId":"316","endLine":78,"endColumn":17},{"ruleId":"313","severity":1,"message":"334","line":93,"column":11,"nodeType":"315","messageId":"316","endLine":93,"endColumn":14},{"ruleId":"322","severity":1,"message":"350","line":23,"column":6,"nodeType":"324","endLine":23,"endColumn":18,"suggestions":"351"},{"ruleId":"322","severity":1,"message":"352","line":12,"column":6,"nodeType":"324","endLine":12,"endColumn":8,"suggestions":"353"},{"ruleId":"337","severity":1,"message":"338","line":17,"column":11,"nodeType":"339","endLine":17,"endColumn":80},{"ruleId":"337","severity":1,"message":"338","line":37,"column":19,"nodeType":"339","endLine":40,"endColumn":20},"no-native-reassign",["354"],"no-negated-in-lhs",["355"],"no-unused-vars","'skills' is assigned a value but never used.","Identifier","unusedVar","'profilePicUrl' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loading', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.profilePic', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'loading', you can also switch to useReducer instead of useState and read 'loading' in the reducer.","ArrayExpression",["356"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["357"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["358"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Unexpected default export of anonymous function","React Hook useEffect has a missing dependency: 'getOverViewData'. Either include it or remove the dependency array. If 'getOverViewData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["359"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","React Hook useEffect has a missing dependency: 'onSearchText'. Either include it or remove the dependency array.",["360"],"'errors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filterData'. Either include it or remove the dependency array.",["361"],"React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["362"],"no-global-assign","no-unsafe-negation",{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.profilePic, profile.skills, profile.social, profile.status, profile.website]",{"range":"377","text":"378"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"379","text":"380"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"381","text":"382"},"Update the dependencies array to be: [getOverViewData]",{"range":"383","text":"384"},"Update the dependencies array to be: [onSearchText]",{"range":"385","text":"386"},"Update the dependencies array to be: [filterData, searchItem]",{"range":"387","text":"388"},"Update the dependencies array to be: [getProfiles]",{"range":"389","text":"390"},[2270,2289],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.profilePic, profile.skills, profile.social, profile.status, profile.website]",[502,511],"[getPost, match.params.id]",[344,360],"[getGithubRepos, username]",[549,551],"[getOverViewData]",[923,925],"[onSearchText]",[672,684],"[filterData, searchItem]",[440,442],"[getProfiles]"]
