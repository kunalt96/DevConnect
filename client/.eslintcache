[{"D:\\DevConnect_MERN\\DevConnect\\client\\src\\index.js":"1","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reportWebVitals.js":"2","D:\\DevConnect_MERN\\DevConnect\\client\\src\\App.js":"3","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Navbar.js":"4","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Landing.js":"5","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Login.js":"6","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Register.js":"7","D:\\DevConnect_MERN\\DevConnect\\client\\src\\store.js":"8","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\index.js":"9","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\alert.js":"10","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\types.js":"11","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\alert.js":"12","D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Alert.js":"13","D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\auth.js":"14","D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\auth.js":"15"},{"size":478,"mtime":1607959927711,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1027,"mtime":1608312045916,"results":"19","hashOfConfig":"17"},{"size":567,"mtime":1607964503022,"results":"20","hashOfConfig":"17"},{"size":789,"mtime":1607964627575,"results":"21","hashOfConfig":"17"},{"size":1504,"mtime":1608107253352,"results":"22","hashOfConfig":"17"},{"size":2821,"mtime":1608385850209,"results":"23","hashOfConfig":"17"},{"size":443,"mtime":1608359552838,"results":"24","hashOfConfig":"17"},{"size":228,"mtime":1608385807720,"results":"25","hashOfConfig":"17"},{"size":389,"mtime":1608134777799,"results":"26","hashOfConfig":"17"},{"size":186,"mtime":1608385807586,"results":"27","hashOfConfig":"17"},{"size":606,"mtime":1608360333834,"results":"28","hashOfConfig":"17"},{"size":652,"mtime":1608311984740,"results":"29","hashOfConfig":"17"},{"size":764,"mtime":1608385807619,"results":"30","hashOfConfig":"17"},{"size":665,"mtime":1608385808023,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"wv7crz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"D:\\DevConnect_MERN\\DevConnect\\client\\src\\index.js",[],["67","68"],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reportWebVitals.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\App.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Navbar.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Landing.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Login.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\auth\\Register.js",["69","70"],"import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport PropTypes from 'prop-types';\r\nimport { register } from '../../actions/auth';\r\n\r\nconst Register = ({ setAlert, register }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password != password2) setAlert('Password dont match', 'danger');\r\n    else {\r\n      console.log(formData);\r\n      const newUser = {\r\n        name,\r\n        email,\r\n        password,\r\n      };\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Sign Up</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Create Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            placeholder='Name'\r\n            name='name'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            required\r\n            onChange={(e) => onChange(e)}\r\n            value={email}\r\n            placeholder='Email Address'\r\n            name='email'\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            minLength='6'\r\n            onChange={(e) => onChange(e)}\r\n            value={password}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Confirm Password'\r\n            name='password2'\r\n            minLength='6'\r\n            onChange={(e) => onChange(e)}\r\n            value={password2}\r\n          />\r\n        </div>\r\n        <input type='submit' className='btn btn-primary' value='Register' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Already have an account? <Link to='/login'>Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.prototype = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     setAlert: () => {\r\n//       dispatch(setAller('ohhhhhhhhhhh', 'danger'));\r\n//     },\r\n//   };\r\n// };\r\n\r\nexport default connect(null, { setAlert, register })(Register);\r\n","D:\\DevConnect_MERN\\DevConnect\\client\\src\\store.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\index.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\alert.js",["71"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",["72","73"],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\types.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\alert.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\components\\layout\\Alert.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\actions\\auth.js",[],"D:\\DevConnect_MERN\\DevConnect\\client\\src\\reducers\\auth.js",["74"],"import { REGISTER_SUCCESS, REGISTER_FAIL } from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case REGISTER_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n    case REGISTER_FAIL:\r\n      localStorage.removeItem('token');\r\n      return { ...state, token: null, isAuthenticated: false, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":23,"column":18,"nodeType":"81","messageId":"82","endLine":23,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":26,"column":13,"nodeType":"85","messageId":"86","endLine":26,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":5,"column":1,"nodeType":"89","endLine":15,"endColumn":2},{"ruleId":"75","replacedBy":"90"},{"ruleId":"77","replacedBy":"91"},{"ruleId":"87","severity":1,"message":"88","line":10,"column":1,"nodeType":"89","endLine":22,"endColumn":2},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'newUser' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["92"],["93"],"no-global-assign","no-unsafe-negation"]